package com.llkj.newbjia.http;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.LinkedHashMap;

import javax.xml.parsers.ParserConfigurationException;

import org.json.JSONException;

import android.content.Intent;
import android.os.Bundle;

import com.llkj.cm.restfull.exception.RestClientException;
import com.llkj.cm.restfull.network.NetworkConnection;
import com.llkj.cm.restfull.network.NetworkConnection.NetworkConnectionResult;
import com.llkj.newbjia.bean.KeyBean;

public class HTTPWorker {
	//获取验证码
	public static Bundle startGetCode(Intent intent)
			throws IllegalStateException, IOException, URISyntaxException,
			RestClientException, ParserConfigurationException, JSONException {
		LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
		params.put(KeyBean.KEY_PHONE, intent.getStringExtra(KeyBean.KEY_PHONE));
		params.put(KeyBean.KEY_TYPE, intent.getStringExtra(KeyBean.KEY_TYPE));
		NetworkConnectionResult wsResult = NetworkConnection
				.retrieveResponseFromService(UrlConfig.BJ_GETCODE_URL,
						NetworkConnection.METHOD_GET, params);
		return GetCodeFactory.parseResult(wsResult.wsResponse);
	}
	//注册
	public static Bundle startRegister(Intent intent)
			throws IllegalStateException, IOException, URISyntaxException,
			RestClientException, ParserConfigurationException, JSONException {
		LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
		params.put(KeyBean.KEY_PHONE, intent.getStringExtra(KeyBean.KEY_PHONE));
		params.put(KeyBean.KEY_CODE, intent.getStringExtra(KeyBean.KEY_CODE));
		params.put(KeyBean.KEY_PASSWORD, intent.getStringExtra(KeyBean.KEY_PASSWORD));
		params.put(KeyBean.KEY_NAME, intent.getStringExtra(KeyBean.KEY_NAME));
		NetworkConnectionResult wsResult = NetworkConnection
				.retrieveResponseFromService(UrlConfig.BJ_REGISTER_URL,
						NetworkConnection.METHOD_POST, params);
		return RegisterFactory.parseResult(wsResult.wsResponse);
	}
	
		//登录
		public static Bundle startLogin(Intent intent)
				throws IllegalStateException, IOException, URISyntaxException,
				RestClientException, ParserConfigurationException, JSONException {
			LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
			params.put(KeyBean.KEY_PHONE, intent.getStringExtra(KeyBean.KEY_PHONE));
			params.put(KeyBean.KEY_PASSWORD, intent.getStringExtra(KeyBean.KEY_PASSWORD));
			NetworkConnectionResult wsResult = NetworkConnection
					.retrieveResponseFromService(UrlConfig.BJ_LOGIN_URL,
							NetworkConnection.METHOD_POST, params);
			return LoginFactory.parseResult(wsResult.wsResponse);
		}
		
		//找回密码
		public static Bundle startForgetpassword(Intent intent)
				throws IllegalStateException, IOException, URISyntaxException,
				RestClientException, ParserConfigurationException, JSONException {
			LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
			params.put(KeyBean.KEY_PHONE, intent.getStringExtra(KeyBean.KEY_PHONE));
			params.put(KeyBean.KEY_CODE, intent.getStringExtra(KeyBean.KEY_CODE));
			params.put(KeyBean.KEY_PASSWORD, intent.getStringExtra(KeyBean.KEY_PASSWORD));
			NetworkConnectionResult wsResult = NetworkConnection
					.retrieveResponseFromService(UrlConfig.BJ_FORGETPASSWORD_URL,
							NetworkConnection.METHOD_POST, params);
			return ForgetpasswordFactory.parseResult(wsResult.wsResponse);
		}
		
		//个人信息
				public static Bundle startPersonDesc(Intent intent)
						throws IllegalStateException, IOException, URISyntaxException,
						RestClientException, ParserConfigurationException, JSONException {
					LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
					params.put(KeyBean.KEY_UID, intent.getStringExtra(KeyBean.KEY_UID));
					NetworkConnectionResult wsResult = NetworkConnection
							.retrieveResponseFromService(UrlConfig.BJ_PERSONDESC_URL,
									NetworkConnection.METHOD_GET, params);
					return PersonDescFactory.parseResult(wsResult.wsResponse);
				}
				
				//我的彼佳币
				public static Bundle startMyCoin(Intent intent)
						throws IllegalStateException, IOException, URISyntaxException,
						RestClientException, ParserConfigurationException, JSONException {
					LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
					params.put(KeyBean.KEY_UID, intent.getStringExtra(KeyBean.KEY_UID));
					NetworkConnectionResult wsResult = NetworkConnection
							.retrieveResponseFromService(UrlConfig.BJ_MYCOIN_URL,
									NetworkConnection.METHOD_GET, params);
					return PersonDescFactory.parseResult(wsResult.wsResponse);
				}
				
				//修改个性签名
				public static Bundle startSignEdit(Intent intent)
						throws IllegalStateException, IOException, URISyntaxException,
						RestClientException, ParserConfigurationException, JSONException {
					LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
					params.put(KeyBean.KEY_UID, intent.getStringExtra(KeyBean.KEY_UID));
					params.put(KeyBean.KEY_SIGNATURE, intent.getStringExtra(KeyBean.KEY_SIGNATURE));
					NetworkConnectionResult wsResult = NetworkConnection
							.retrieveResponseFromService(UrlConfig.BJ_SIGNEDIT_URL,
									NetworkConnection.METHOD_GET, params);
					return SignEditFactory.parseResult(wsResult.wsResponse);
				}
				
				//修改用户名
				public static Bundle startNameEdit(Intent intent)
						throws IllegalStateException, IOException, URISyntaxException,
						RestClientException, ParserConfigurationException, JSONException {
					LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();
					params.put(KeyBean.KEY_UID, intent.getStringExtra(KeyBean.KEY_UID));
					params.put(KeyBean.KEY_NAME, intent.getStringExtra(KeyBean.KEY_NAME));
					NetworkConnectionResult wsResult = NetworkConnection
							.retrieveResponseFromService(UrlConfig.BJ_NAMEEDIT_URL,
									NetworkConnection.METHOD_GET, params);
					return NameEditFactory.parseResult(wsResult.wsResponse);
				}
}
