package com.llkj.newbjia.main;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.llkj.newbjia.BaseActivity;
import com.llkj.newbjia.R;
import com.llkj.newbjia.adpater.MainAdapter;
import com.llkj.newbjia.bean.KeyBean;
import com.llkj.newbjia.bean.ResponseBean;
import com.llkj.newbjia.http.PoCService;
import com.llkj.newbjia.login.LoginActivity;
import com.llkj.newbjia.shoppingcart.WriteOrderActivity;
import com.llkj.newbjia.utils.FinalBitmapUtil;
import com.llkj.newbjia.utils.StringUtil;
import com.llkj.newbjia.utils.ToastUtil;

/** 团购 */
public class GoodDetailActivity extends BaseActivity implements OnClickListener {
	private ViewPager guidePages;
	private ArrayList<View> viewList = new ArrayList<View>();
	private ImageView[] imageViews;
	private ArrayList<String> urls;
	private FinalBitmapUtil fb;
	private int currentItem;
	private TextView tv_ivnmus, tv_Offered, tv_goods_name, tv_time,
			tv_xiangounum, tv_zengsongjifen, tv_dangqianjiage, tv_jietijiage,
			tv_nums, tv_price, tv_shangpinshuxing, tv_tuangoushuoming;
	private EditText et_nums;
	private int nums, mRequestId;
	// 限购数量 restrict_amount 赠送积分gift_integral 价格阶梯 price_ladder 团购说明 act_desc
	// 当前价 formated_cur_price
	private String strnums, goods_id, goods_img, goods_name, start_time,
			end_time, restrict_amount, gift_integral, act_desc,
			formated_cur_price;
	private RelativeLayout rl_goods_info;
	private Intent bigIntent;

	private ArrayList price_ladder, properties;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_goods_detail);
		setTitle(R.string.goodsdetail, true, R.string.kongzifuchuan, false,
				R.string.kongzifuchuan);

		initView();
		initListener();
		initData();
	}

	private void initView() {
		guidePages = (ViewPager) findViewById(R.id.guidePages);
		tv_ivnmus = (TextView) findViewById(R.id.tv_ivnmus);
		et_nums = (EditText) findViewById(R.id.et_nums);
		rl_goods_info = (RelativeLayout) findViewById(R.id.rl_goods_info);
		tv_Offered = (TextView) findViewById(R.id.tv_Offered);
		tv_goods_name = (TextView) findViewById(R.id.tv_goods_name);
		tv_time = (TextView) findViewById(R.id.tv_time);
		tv_xiangounum = (TextView) findViewById(R.id.tv_xiangounum);
		tv_zengsongjifen = (TextView) findViewById(R.id.tv_zengsongjifen);
		tv_dangqianjiage = (TextView) findViewById(R.id.tv_dangqianjiage);
		tv_jietijiage = (TextView) findViewById(R.id.tv_jietijiage);
		tv_nums = (TextView) findViewById(R.id.tv_nums);
		tv_price = (TextView) findViewById(R.id.tv_price);
		tv_shangpinshuxing = (TextView) findViewById(R.id.tv_shangpinshuxing);
		tv_tuangoushuoming = (TextView) findViewById(R.id.tv_tuangoushuoming);

	}

	private void initListener() {
		guidePages.setOnPageChangeListener(new NavigationPageChangeListener());
		rl_goods_info.setOnClickListener(this);
		tv_Offered.setOnClickListener(this);
	}

	private void initData() {
		fb = FinalBitmapUtil.create(this);
		bigIntent = getIntent();
		if (bigIntent.hasExtra("goods_id")) {
			goods_id = bigIntent.getStringExtra("goods_id");

		}
		if (bigIntent.hasExtra("goods_img")) {
			goods_img = bigIntent.getStringExtra("goods_img");

		}
		goods_id = "20";
		urls = new ArrayList<String>();
		urls.add(goods_img);
		fillGuanggao(urls);
		if (StringUtil.isNetworkConnected(this)) {
			if (!StringUtil.isEmpty(goods_id)) {
				mRequestId = mRequestManager.purchaseDesc(goods_id, true);
			}
		} else {
			ToastUtil.makeShortText(this, R.string.no_wangluo);
		}

	}

	public void fillGuanggao(ArrayList arrayList) {
		for (int i = 0; i < arrayList.size(); i++) {
			ImageView iv = new ImageView(this);
			iv.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT,
					LayoutParams.MATCH_PARENT));

			fb.displayForPicture(iv, arrayList.get(i) + "");
			iv.setScaleType(ImageView.ScaleType.FIT_XY);
			iv.setTag(i);
			iv.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					// TODO Auto-generated method stub
					ToastUtil.makeShortText(GoodDetailActivity.this, "跳到详情页面"
							+ arg0.getTag());
				}
			});
			viewList.add(iv);
		}
		tv_ivnmus.setText("1/" + viewList.size());
		guidePages.setAdapter(new MyViewPagerAdapter(viewList));
		imageViews = new ImageView[arrayList.size()];
		// for (int i = 0; i < arrayList.size(); i++) {
		// ImageView imageView = new ImageView(this);
		// imageView = new ImageView(this);
		// imageView.setLayoutParams(new LayoutParams(20, 20));
		// imageView.setPadding(5, 0, 5, 0);
		// imageViews[i] = imageView;
		// if (i == 0)
		// imageViews[i].setImageDrawable(getResources().getDrawable(
		// R.drawable.page_focused));
		// else
		// imageViews[i].setImageDrawable(getResources().getDrawable(
		// R.drawable.page_unfocused));
		//
		// viewGroup.addView(imageViews[i]);
		// }
	}

	class NavigationPageChangeListener implements OnPageChangeListener {

		@Override
		public void onPageScrollStateChanged(int arg0) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onPageSelected(int arg0) {
			// TODO Auto-generated method stub
			currentItem = arg0;
			tv_ivnmus.setText((currentItem + 1) + "/" + viewList.size());
			// for (int i = 0; i < imageViews.length; i++) {
			// if (arg0 == i) {
			// imageViews[i].setImageDrawable(getResources().getDrawable(
			// R.drawable.page_focused));
			// } else {
			// imageViews[i].setImageDrawable(getResources().getDrawable(
			// R.drawable.page_unfocused));
			// }
			// }
		}
	}

	public class MyViewPagerAdapter extends PagerAdapter {
		private List<View> mListViews;

		public MyViewPagerAdapter(List<View> mListViews) {
			this.mListViews = mListViews;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			container.removeView(mListViews.get(position));
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			container.addView(mListViews.get(position), 0);
			return mListViews.get(position);
		}

		@Override
		public int getCount() {
			return mListViews.size();
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}
	}

	@Override
	public void onClick(View arg0) {
		Intent intent;
		switch (arg0.getId()) {
		case R.id.rl_goods_info:
			intent = new Intent(this, GoodsInfoTwoActivity.class);
			intent.putExtra(KeyBean.KEY_ID, goods_id);
			startActivity(intent);

			break;

		case R.id.tv_Offered:
			intent = new Intent(this, WriteOrderActivity.class);
			startActivity(intent);
			break;
		}
	}

	@Override
	public void onRequestFinished(int requestId, int resultCode, Bundle payload) {
		super.onRequestFinished(requestId, resultCode, payload);
		if (resultCode == PoCService.SUCCESS_CODE) {
			if (mRequestId == requestId) {
				int result = payload.getInt(ResponseBean.RESPONSE_STATE);
				// if (result == 1) {
				// 限购数量 restrict_amount 赠送积分gift_integral 价格阶梯 price_ladder
				// 团购说明 act_desc 当前价 formated_cur_price
				restrict_amount = payload
						.getString(ResponseBean.RESPONSE_RESTRICT_AMOUNT);
				gift_integral = payload
						.getString(ResponseBean.RESPONSE_GIFT_INTEGRAL);

				price_ladder = payload
						.getParcelableArrayList(ResponseBean.RESPONSE_PRICE_LADDER);

				properties = payload.getParcelableArrayList("properties");
				act_desc = payload.getString(ResponseBean.RESPONSE_ACT_DESC);
				formated_cur_price = payload
						.getString(ResponseBean.RESPONSE_FORMATED_CUR_PRICE);
				goods_name = payload.getString("goods_name");
				start_time = payload
						.getString(ResponseBean.RESPONSE_START_TIME);
				end_time = payload.getString(ResponseBean.RESPONSE_END_TIME);
				tv_goods_name.setText(goods_name);
				tv_time.setText(start_time + "--" + end_time);
				tv_xiangounum.setText(restrict_amount);
				tv_zengsongjifen.setText(gift_integral);
				tv_dangqianjiage.setText(formated_cur_price);
				HashMap jietijiage = (HashMap) price_ladder.get(0);
				if (jietijiage.containsKey("formated_price")) {

					tv_jietijiage
							.setText(jietijiage.get("formated_price") + "");
				}
				if (jietijiage.containsKey("amount")) {
					tv_nums.setText(jietijiage.get("amount") + "");
				}
				if (jietijiage.containsKey("price")) {
					tv_price.setText("￥" + jietijiage.get("price") + "");
				}
				StringBuilder sb = new StringBuilder();
				for (int i = 0; i < properties.size(); i++) {
					HashMap peizhi = (HashMap) properties.get(i);
					if (peizhi.containsKey("name")) {
						String name = peizhi.get("name") + "";
						sb.append(name + ":");
					}
					if (peizhi.containsKey("value")) {
						String value = peizhi.get("value") + "";
						sb.append(value + "  ");
					}
				}
				tv_shangpinshuxing.setText(sb.toString());
				tv_tuangoushuoming.setText(act_desc);
				// } else {
				// String msg = payload
				// .getString(ResponseBean.RESPONSE_MESSAGE);
				// ToastUtil.makeShortText(this, msg);
				// }

			}

		}
	}
}
