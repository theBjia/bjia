package com.llkj.newbjia.shoppingcart;

import java.util.ArrayList;
import java.util.HashMap;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.llkj.newbjia.BaseActivity;
import com.llkj.newbjia.MyApplication;
import com.llkj.newbjia.R;
import com.llkj.newbjia.adpater.SelfDesionAdapter;
import com.llkj.newbjia.bean.ResponseBean;
import com.llkj.newbjia.http.PoCService;
import com.llkj.newbjia.utils.StringUtil;
import com.llkj.newbjia.utils.ToastUtil;
/**
 * 自提点页
 * @author John
 *
 */
public class SelfDesionActivity extends BaseActivity implements OnClickListener{
	private ImageView self_back_imgId,self_tv_head_title_finish;
	TextView tv_Yes,tv_No;
	RelativeLayout bg_id;
	LinearLayout ll_Show;
	private ArrayList arrayList;
	private ArrayList list;
	private SelfDesionAdapter adapter;
	private ListView lv_show;
	private int mZitiList;
	private int mZitiDistribution;
	private String lng,lat;
//	protected MyApplication application;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.self_selef_desion_point);
		initView();
		initData();
		initListener();
	}
	private void initView() {
		self_back_imgId = (ImageView) findViewById(R.id.self_back_imgId);
		self_tv_head_title_finish = (ImageView) findViewById(R.id.self_tv_head_title_finish);
		tv_Yes = (TextView) findViewById(R.id.tv_zitiDistribution_Yes);
		tv_No = (TextView) findViewById(R.id.tv_zitiDistribution_No);
		ll_Show = (LinearLayout) findViewById(R.id.ll_Show);
		lv_show = (ListView) findViewById(R.id.lv_show);
	}
	private void initData() {
		 lng = MyApplication.geoLng;
		 lat = MyApplication.geoLat;
		
		if(StringUtil.isNetworkConnected(this)){
			if(StringUtil.isEmpty(lng)){
				lng = "116.22";
			}
			if(StringUtil.isEmpty(lat)){
				lat = "39.11";
			}
			mZitiDistribution = mRequestManager.ZitiDistribution(lng,lat,true);
		}else{
			ToastUtil.makeShortText(this, R.string.no_wangluo);
		}
		adapter = new SelfDesionAdapter(SelfDesionActivity.this, arrayList);
		lv_show.setAdapter(adapter);
	}
	private void initListener() {
		self_back_imgId.setOnClickListener(this);
		self_tv_head_title_finish.setOnClickListener(this);
		tv_Yes.setOnClickListener(this);
		tv_No.setOnClickListener(this);
		
	}
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.self_back_imgId:
			MyApplication.getInstance().returnBack(SelfDesionActivity.this);
			break;
		case R.id.tv_zitiDistribution_Yes:
			ll_Show.setBackgroundResource(R.drawable.t1);
			tv_Yes.setTextColor(0xffffffff);
			tv_No.setTextColor(0xff3ab485);
			if(StringUtil.isNetworkConnected(this)){
				mZitiDistribution = mRequestManager.ZitiDistribution(lng,lat,true);
			}else{
				ToastUtil.makeShortText(this, R.string.no_wangluo);
			}
			break;
		case R.id.tv_zitiDistribution_No:
			ll_Show.setBackgroundResource(R.drawable.t2);
			tv_Yes.setTextColor(0xff3ab485);
			tv_No.setTextColor(0xffffffff);
			if(StringUtil.isNetworkConnected(this)){
				mZitiList = mRequestManager.zitiList(true);
			}else{
				ToastUtil.makeShortText(this, R.string.no_wangluo);
			}
			break;
		case R.id.self_tv_head_title_finish:
			openActivity(SearchSelfPointActivity.class);
			break;
		}
	}
	
	@Override
	public void onRequestFinished(int requestId, int resultCode, Bundle payload) {
		super.onRequestFinished(requestId, resultCode, payload);
		if (resultCode == PoCService.SUCCESS_CODE) {
			if (mZitiList == requestId) {
				int result = payload.getInt(ResponseBean.RESPONSE_STATE);
				if (result == 1) {
					arrayList = payload.getParcelableArrayList(ResponseBean.RESPONSE_LIST);
					if(null != arrayList && arrayList.size()>0){
					   adapter.notifyDataSetChanged(arrayList);
					}else{
					   arrayList.clear();
					   adapter.notifyDataSetChanged(arrayList);
					   ToastUtil.makeShortText(this, R.string.no_data);
					}
				} else {
					String msg = payload
							.getString(ResponseBean.RESPONSE_MESSAGE);
					ToastUtil.makeShortText(this, msg);
				}
			}
			if(mZitiDistribution == requestId){
				int result = payload.getInt(ResponseBean.RESPONSE_STATE);
				if (result == 1) {
					arrayList = payload.getParcelableArrayList(ResponseBean.RESPONSE_LIST);
					if(null != arrayList && arrayList.size()>0){
					   adapter.notifyDataSetChanged(arrayList);
					}else{
					   arrayList.clear();
					   adapter.notifyDataSetChanged(arrayList);
					   ToastUtil.makeShortText(this, R.string.no_data);
					}
				} else {
					String msg = payload
							.getString(ResponseBean.RESPONSE_MESSAGE);
					ToastUtil.makeShortText(this, msg);
				}
			}
		}
	}
}
