package com.llkj.newbjia;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.provider.SyncStateContract.Constants;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu;
import com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity;
import com.llkj.newbjia.collection.CollectionFragment;
import com.llkj.newbjia.fenlei.FenleiFragment;
import com.llkj.newbjia.main.MainFragment;
import com.llkj.newbjia.quanzi.QuanzhiFragment;

public class MainActivity extends SlidingFragmentActivity {

	private SlidingMenu localSlidingMenu;
	public LeftSlidingMenuFragment mFrag;
	private FragmentManager fm;
	private long mExitTime;

	private Fragment mContent;
	private Fragment mainFragment, fenLeiFragment, quanzhiFragement;
	private MyReceiver receiver;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		fm = getSupportFragmentManager();
		MyApplication.getInstance().addActivity(this);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.main);
		initView();
		initSlidingMenu();
		receiver = new MyReceiver();
		IntentFilter filter = new IntentFilter();
		registerReceiver(receiver, filter);

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	public void initSlidingMenu() {
		mainFragment = new MainFragment();
		fenLeiFragment = new FenleiFragment();
		quanzhiFragement = new QuanzhiFragment();
		mContent = mainFragment;

		fm.beginTransaction().replace(R.id.center_frame, mContent).commit();
		setBehindContentView(R.layout.main_left_layout);// 设置左边的菜单布局
		FragmentTransaction mFragementTransaction = fm.beginTransaction();
		mFrag = new LeftSlidingMenuFragment();
		mFragementTransaction.replace(R.id.main_left_fragment, mFrag);
		mFragementTransaction.commit();
		localSlidingMenu = getSlidingMenu();
		localSlidingMenu.setMode(SlidingMenu.LEFT);// 设置是左滑还是右滑，还是左右都可以滑，我这里只做了左滑
		localSlidingMenu.setBehindOffsetRes(R.dimen.slidingmenu_offset);// 设置菜单宽度
		localSlidingMenu.setFadeDegree(0.35f);// 设置淡入淡出的比例
		localSlidingMenu.setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);// 设置手势模式
		localSlidingMenu.setShadowDrawable(R.drawable.shadow);// 设置左菜单阴影图片
		localSlidingMenu.setShadowWidthRes(R.dimen.shadow_width);
		localSlidingMenu.setFadeEnabled(true);// 设置滑动时菜单的是否淡入淡出
		localSlidingMenu.setBehindScrollScale(0.333f);// 设置滑动时拖拽效果
	}

	private void initView() {

	}

	public void showOrHideMenu() {
		if (localSlidingMenu.isMenuShowing()) {
			localSlidingMenu.showContent();
		} else {
			localSlidingMenu.showMenu();
		}
	}

	public void showOrHideSecondaryMenu() {
		if (localSlidingMenu.isSecondaryMenuShowing()) {
			localSlidingMenu.showContent();
		} else {
			localSlidingMenu.showSecondaryMenu();
		}
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			if (localSlidingMenu.isMenuShowing()
					|| localSlidingMenu.isSecondaryMenuShowing()) {
				localSlidingMenu.showContent();
			} else {
				if ((System.currentTimeMillis() - mExitTime) > 2000) {
					Toast.makeText(this, "在按一次退出", Toast.LENGTH_SHORT).show();
					mExitTime = System.currentTimeMillis();
				} else {
					finish();
				}
			}
			return true;
		}
		// 拦截MENU按钮点击事件，让他无任何操作
		if (keyCode == KeyEvent.KEYCODE_MENU) {
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}

	/**
	 * 左侧菜单点击切换首页的内容
	 */
	public void switchContent(int type) {

		switch (type) {
		case 0:
			mContent = mainFragment;
			break;
		case 1:
			mContent = fenLeiFragment;
			break;
		case 9:
			mContent = quanzhiFragement;
			break;
		default:
			break;
		}
		replaceFragment(mContent);
		// fm.beginTransaction().replace(R.id.center_frame, mContent).commit();
		getSlidingMenu().showContent();
	}

	class MyReceiver extends BroadcastReceiver {

		@Override
		public void onReceive(Context arg0, Intent arg1) {
			// TODO Auto-generated method stub

		}

	}

	private void replaceFragment(Fragment newFragment) {
		FragmentTransaction transaction = fm.beginTransaction();
		if (!newFragment.isAdded()) {
			try {
				transaction.replace(R.id.center_frame, newFragment);
				transaction.addToBackStack(null);
				transaction.commit();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			transaction.show(newFragment);
		}
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		unregisterReceiver(receiver);
	}

}
