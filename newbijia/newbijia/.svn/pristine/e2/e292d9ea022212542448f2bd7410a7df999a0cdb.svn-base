package com.llkj.newbjia.main;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.llkj.newbjia.BaseActivity;
import com.llkj.newbjia.R;
import com.llkj.newbjia.shoppingcart.WriteOrderActivity;
import com.llkj.newbjia.utils.FinalBitmapUtil;
import com.llkj.newbjia.utils.ToastUtil;

public class GoodDetailActivity extends BaseActivity implements OnClickListener {
	private ViewPager guidePages;
	private ArrayList<View> viewList = new ArrayList<View>();
	private ImageView[] imageViews;
	private ArrayList<String> urls;
	private FinalBitmapUtil fb;
	private int currentItem;
	private TextView tv_ivnmus,tv_Offered;
	private EditText et_nums;
	private int nums;
	private String strnums;
	private RelativeLayout rl_goods_info;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_goods_detail);
		setTitle(R.string.goodsdetail, true, R.string.kongzifuchuan, false,
				R.string.kongzifuchuan);

		initView();
		initListener();
		initData();
	}

	private void initView() {
		guidePages = (ViewPager) findViewById(R.id.guidePages);
		tv_ivnmus = (TextView) findViewById(R.id.tv_ivnmus);
		et_nums = (EditText) findViewById(R.id.et_nums);
		rl_goods_info = (RelativeLayout) findViewById(R.id.rl_goods_info);
		tv_Offered = (TextView) findViewById(R.id.tv_Offered);
	}

	private void initListener() {
		guidePages.setOnPageChangeListener(new NavigationPageChangeListener());
		rl_goods_info.setOnClickListener(this);
		tv_Offered.setOnClickListener(this);
	}

	private void initData() {
		fb = FinalBitmapUtil.create(this);
		urls = new ArrayList<String>();
		for (int i = 0; i < 5; i++) {
			urls.add("http://d.hiphotos.baidu.com/image/pic/item/f3d3572c11dfa9ec419b387761d0f703918fc11d.jpg");
		}
		fillGuanggao(urls);
	}

	public void fillGuanggao(ArrayList arrayList) {
		for (int i = 0; i < arrayList.size(); i++) {
			ImageView iv = new ImageView(this);
			iv.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT,
					LayoutParams.MATCH_PARENT));

			fb.displayForPicture(iv, arrayList.get(i) + "");
			iv.setScaleType(ImageView.ScaleType.FIT_XY);
			iv.setTag(i);
			iv.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					// TODO Auto-generated method stub
					ToastUtil.makeShortText(GoodDetailActivity.this, "跳到详情页面"
							+ arg0.getTag());
				}
			});
			viewList.add(iv);
		}
		guidePages.setAdapter(new MyViewPagerAdapter(viewList));
		imageViews = new ImageView[arrayList.size()];
		// for (int i = 0; i < arrayList.size(); i++) {
		// ImageView imageView = new ImageView(this);
		// imageView = new ImageView(this);
		// imageView.setLayoutParams(new LayoutParams(20, 20));
		// imageView.setPadding(5, 0, 5, 0);
		// imageViews[i] = imageView;
		// if (i == 0)
		// imageViews[i].setImageDrawable(getResources().getDrawable(
		// R.drawable.page_focused));
		// else
		// imageViews[i].setImageDrawable(getResources().getDrawable(
		// R.drawable.page_unfocused));
		//
		// viewGroup.addView(imageViews[i]);
		// }
	}

	class NavigationPageChangeListener implements OnPageChangeListener {

		@Override
		public void onPageScrollStateChanged(int arg0) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onPageSelected(int arg0) {
			// TODO Auto-generated method stub
			currentItem = arg0;
			tv_ivnmus.setText((currentItem + 1) + "/" + viewList.size());
			// for (int i = 0; i < imageViews.length; i++) {
			// if (arg0 == i) {
			// imageViews[i].setImageDrawable(getResources().getDrawable(
			// R.drawable.page_focused));
			// } else {
			// imageViews[i].setImageDrawable(getResources().getDrawable(
			// R.drawable.page_unfocused));
			// }
			// }
		}
	}

	public class MyViewPagerAdapter extends PagerAdapter {
		private List<View> mListViews;

		public MyViewPagerAdapter(List<View> mListViews) {
			this.mListViews = mListViews;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			container.removeView(mListViews.get(position));
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			container.addView(mListViews.get(position), 0);
			return mListViews.get(position);
		}

		@Override
		public int getCount() {
			return mListViews.size();
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}
	}

	@Override
	public void onClick(View arg0) {
		Intent intent;
		switch (arg0.getId()) {
		case R.id.rl_goods_info:
			intent = new Intent(this, GoodsInfoActivity.class);
			startActivity(intent);

			break;

		case R.id.tv_Offered:
			intent = new Intent(this,WriteOrderActivity.class);
			startActivity(intent);
			break;
		}
	}
}
